--
--    Copyright 2010-2016 the original author or authors.
--
--    Licensed under the Apache License, Version 2.0 (the "License");
--    you may not use this file except in compliance with the License.
--    You may obtain a copy of the License at
--
--       http://www.apache.org/licenses/LICENSE-2.0
--
--    Unless required by applicable law or agreed to in writing, software
--    distributed under the License is distributed on an "AS IS" BASIS,
--    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--    See the License for the specific language governing permissions and
--    limitations under the License.
--

-- // sequences for ids generation
-- Migration SQL that makes the change goes here.

CREATE SEQUENCE USERS_PK_SEQ
!RUN!

CREATE OR REPLACE TRIGGER USERS_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON USERS
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT USERS_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!

CREATE SEQUENCE ACADEMIES_PK_SEQ
!RUN!

CREATE OR REPLACE TRIGGER ACADEMIES_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON ACADEMIES
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT ACADEMIES_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!

CREATE SEQUENCE FILES_PK_SEQ
!RUN!

CREATE OR REPLACE TRIGGER FILES_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON FILES
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT FILES_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!

CREATE SEQUENCE SEMESTERS_FILES_PK_SEQ
!RUN!

CREATE OR REPLACE TRIGGER SEMESTERS_FILES_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON SEMESTERS_FILES
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT SEMESTERS_FILES_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!


CREATE SEQUENCE SUBJECTS_PK_SEQ
!RUN!


CREATE OR REPLACE TRIGGER SUBJECTS_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON FILES
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT SUBJECTS_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!

CREATE SEQUENCE UNIVERSITY_SEMESTERS_PK_SEQ
!RUN!

CREATE OR REPLACE TRIGGER UNIVERSITY_SEMESTERS_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON UNIVERSITY_SEMESTERS
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT UNIVERSITY_SEMESTERS_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!

CREATE SEQUENCE UNIVERSITY_SUBJECTS_PK_SEQ
!RUN!


CREATE OR REPLACE TRIGGER UNIVERSITY_SUBJECTS_BIUR_TRG
  BEFORE INSERT OR UPDATE
  ON UNIVERSITY_SUBJECTS
  FOR EACH ROW
  BEGIN
    IF :NEW.ID IS NULL
    THEN
      SELECT UNIVERSITY_SUBJECTS_PK_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END;
!RUN!

-- //@UNDO
-- SQL to undo the change goes here.


DROP SEQUENCE USERS_PK_SEQ
!RUN!

DROP SEQUENCE ACADEMIES_PK_SEQ
!RUN!
DROP SEQUENCE FILES_PK_SEQ
!RUN!
DROP SEQUENCE SEMESTERS_PK_SEQ
!RUN!
DROP SEQUENCE SUBJECTS_PK_SEQ
!RUN!
DROP SEQUENCE UNIVERSITY_SEMESTERS_PK_SEQ
!RUN!
DROP SEQUENCE UNIVERSITY_SUBJECTS_PK_SEQ
!RUN!
DROP TRIGGER USERS_BIUR_TRG;
!RUN!
DROP TRIGGER ACADEMIES_BIUR_TRG;
!RUN!
DROP TRIGGER FILES_BIUR_TRG;
!RUN!
DROP TRIGGER SEMSETERS_FILES_BIUR_TRG;
!RUN!
DROP TRIGGER SUBJECTS_FILES_BIUR_TRG;
!RUN!
DROP TRIGGER UNIVERSITY_SEMESTERS_BIUR_TRG;
!RUN!
DROP TRIGGER UNIVERSITY_SUBJECTS_BIUR_TRG;
!RUN!

